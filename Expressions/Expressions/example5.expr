# Testing functions as first-class-citizens

type TestType {
  Int integer,
  (Int, Int -> Int) func
}

define main: -> Int {
  ftest(add) # Can be called with 'add' or 'subtract'
}

define test2: -> Int {
  let TestType derp = TestType(1, add) {
    derp.func(1, 1)
  }
}

define ftest: (Int, Int -> Int) func -> Int {
  func(1, 2)
}

# Methods that adhere to (Int, Int -> Int)
define add: Int a, Int b -> Int {
  a + b
}

define subtract: Int a, Int b -> Int {
  a - b
}

define testing: Int a -> Int {
  let (Int, Int -> Int) addFunc = add {
    a + addFunc(1, 1) # 3
  }
}
