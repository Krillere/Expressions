# Entrypoint
#define main: -> Int {
#  printLn("Hello World!")
#  0
#}

# Functions here

#foreach([1, 3, 3, 7], lambda (Int a -> Void) { printLn(a) })
define main: -> Int {
if 1 > 1 { 0 } else { 1 }
}

#define foreach: [Generic] items, (Generic -> Void) func -> Void {
#  foreachHelper(items, func)
#}
#define foreachHelper: [Generic] itemsLeft, (Generic -> Void) func -> Void {
#  if null(itemsLeft) { }
#  else
#  {
#    func(first(itemsLeft))
#    foreachHelper(tail(itemsLeft), func)
#  }
#}

