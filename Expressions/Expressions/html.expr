define main: -> Int {
  printLn(makeTag("p", [], [], ["asd"]))
  printLn(filter([1, 2, 1], isOne))
  0
}

define makeTag: String tag, [String] attrNames, [String] attrValues, [String] content -> String {
  append("<", tag " ", makeAttributtes(attrNames, attrValues), ">")
}
define makeAttributtes: [String] attrNames, [String] attrValues -> String {
  ""
}

define filter: [Generic] lst, (Generic -> Bool) func -> [Generic] {
  filterHelper(lst, func)
}
define filterHelper: [Generic] lst, (Generic -> Bool) func -> [Generic] {
switch null(lst) { [] } # Stop if empty
       func(first(lst)) { append(list(first(lst)), filterHelper(tail(lst), func)) }
       else { filterHelper(tail(lst), func) }
}
